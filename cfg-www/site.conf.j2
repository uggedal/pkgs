server {
	listen 80;
	listen [::]:80;

	server_name {{ tld }}{% if aliases is defined %} {{ aliases|join(" ") }}{% endif %};

	root /var/empty;

	location / {
		return 301 https://{{ tld }}$request_uri;
	}
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name {{ tld }}{% if aliases is defined %} {{ aliases|join(" ") }}{% endif %};

	access_log /var/log/nginx/{{ _key }}_access.log;
	error_log /var/log/nginx/{{ _key }}_error.log;

	ssl_certificate /etc/dehydrated/certs/{{ cert }}/fullchain.pem;
	ssl_certificate_key /etc/dehydrated/certs/{{ cert }}/privkey.pem;
	include /etc/nginx/conf.d/ssl.part;

	client_max_body_size 4m;

	root {{ root }};

	{% if autoindex is defined and autoindex %}
	autoindex on;
	autoindex_exact_size off;
	{% endif %}

	charset UTF-8;

	{% if auth_basic is defined %}
	auth_basic "priv";
	auth_basic_user_file /etc/nginx/conf.d/{{ _key }}.passwd;
	{% endif %}

	{% if proxies is defined %}
	{% for proxy in proxies %}
	location {{ proxy.location }} {
		try_files $uri @{{ proxy.name }}-proxy;
	}

	location @{{ proxy.name }}-proxy {
		{% if 'scgi' in proxy %}
		include scgi_params;
		scgi_param DOCUMENT_ROOT {{ root}};
		scgi_pass {{ proxy.uri }};
		{% else %}
		proxy_set_header HOST $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_pass {{ proxy.uri }};
		{% if 'nobuffer' in proxy %}
		proxy_buffering off;
		{% endif %}
		{% if 'ws' in proxy %}
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $http_connection;
		{% endif %}
		{% endif %}
	}
	{% endfor %}
	{% endif %}
}
